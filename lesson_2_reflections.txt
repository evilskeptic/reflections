What happens when you initialize a repository? Why do you need to do it?

You have to start somewhere!  It records the starting state of the directory.

How is the staging area different from the working directory and the repository? What value do you think it offers?

The staging area is a temporary area to hold files I intend to commit. It's value
should be that I can do a partial commit of files in a logical change, while leaving
others behind that perhaps I don't want to include yet for some reason.

How can you use the staging area to make sure you have one commit per logical change?
By only placing the files into the staging area that make sense for the change, while
leaving other currently edited files in the working directory.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?

If I wanted to create different versions of my code while keeping a master version intact.

How do the diagrams help you visualize the branch structure?

They let me see what changes are where within the structure, and also easily see if
there are any nodes not connected to a parent.

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

It makes them into a single branch, so the changes from both branches can benefit the other. The diagram
is represented in such a way to make it visually obvious when the changes happened and what files were
involved.

What are the pros and cons of Git’s automatic merging vs. always doing merges manually?
The pros are that when it works it does it well.  The con is that it is using text methods
that are horribly outdated, instead of a gui more well suited for 2016.  Am going to continue the
course as I've come this far, but my hopes are pretty low for this product, especially considering
how often the process has bugged out even when following instructions exactly from the intros.